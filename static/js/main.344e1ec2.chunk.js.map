{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","assets/images/logo.svg","components/Header/styles.ts","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","addProduct","productId","updatedCart","productExists","find","product","id","get","stock","stockAmount","data","amount","currentAmount","toast","error","newProduct","push","setItem","stringify","updateProductAmount","Error","Provider","value","removeProduct","productIndex","findIndex","splice","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","newSumAmount","useEffect","response","map","priceFormatted","price","loadProducts","src","image","alt","title","type","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","cartFormatted","subTotal","total","sumTotal","disabled","handleProductDecrement","readOnly","handleProductIncrement","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.344e1ec2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nexport const ProductList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 20px;\r\n  list-style: none;\r\n\r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    padding: 20px;\r\n\r\n    img {\r\n      align-self: center;\r\n      max-width: 250px;\r\n    }\r\n\r\n    > strong {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      color: #333;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    > span {\r\n      font-size: 21px;\r\n      font-weight: bold;\r\n      margin: 5px 0 20px;\r\n    }\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n      margin-top: auto;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.06, '#7159c1')};\r\n      }\r\n\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 12px;\r\n        background: rgba(0, 0, 0, 0.1);\r\n\r\n        svg {\r\n          margin-right: 5px;\r\n        }\r\n      }\r\n\r\n      span {\r\n        flex: 1;\r\n        text-align: center;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'http://localhost:3333',\r\n});\r\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\r\n  style: 'currency',\r\n  currency: 'BRL',\r\n});\r\n","import { createContext, ReactNode, useContext, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { api } from '../services/api';\r\nimport { Product, Stock } from '../types';\r\n\r\ninterface CartProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface UpdateProductAmount {\r\n  productId: number;\r\n  amount: number;\r\n}\r\n\r\ninterface CartContextData {\r\n  cart: Product[];\r\n  addProduct: (productId: number) => Promise<void>;\r\n  removeProduct: (productId: number) => void;\r\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextData>({} as CartContextData);\r\n\r\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\r\n  const [cart, setCart] = useState<Product[]>(() => {\r\n    const storagedCart = localStorage.getItem('@RocketShoes:cart');\r\n\r\n    if (storagedCart) {\r\n      return JSON.parse(storagedCart);\r\n    }\r\n\r\n    return [];\r\n  });\r\n\r\n  const addProduct = async (productId: number) => {\r\n    try {\r\n      const updatedCart = [...cart];\r\n      const productExists = updatedCart.find(product => product.id === productId);\r\n\r\n      const stock = await api.get(`/stock/${productId}`);\r\n      const stockAmount = stock.data.amount;\r\n      const currentAmount = productExists ? productExists.amount : 0;\r\n      const amount = currentAmount + 1;\r\n\r\n      if (amount > stockAmount){\r\n        toast.error('Quantidade solicitada fora de estoque');\r\n        return;\r\n      }\r\n\r\n      if(productExists){\r\n        productExists.amount = amount;\r\n      }else{\r\n        const product = await api.get(`/products/${productId}`);\r\n\r\n        const newProduct = {\r\n          ...product.data,\r\n          amount: 1\r\n        }\r\n        updatedCart.push(newProduct);\r\n      }\r\n\r\n      setCart(updatedCart);\r\n      localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\r\n\r\n    } catch {\r\n      toast.error('Erro na adição do produto');\r\n    }\r\n  };\r\n\r\n  const removeProduct = (productId: number) => {\r\n    try {\r\n      const updatedCart = [...cart];\r\n      const productIndex = updatedCart.findIndex(product => product.id === productId);\r\n\r\n      if(productIndex >= 0){\r\n        updatedCart.splice(productIndex, 1);\r\n        setCart(updatedCart);\r\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\r\n      }else{\r\n        throw Error();\r\n      }\r\n    } catch {\r\n      toast.error('Erro na remoção do produto');\r\n    }\r\n  };\r\n\r\n  const updateProductAmount = async ({\r\n    productId,\r\n    amount,\r\n  }: UpdateProductAmount) => {\r\n    try {\r\n      if(amount<= 0){\r\n        return;\r\n      }\r\n\r\n      const stock = await api.get(`/stock/${productId}`);\r\n      const stockAmount = stock.data.amount;\r\n\r\n      if(amount > stockAmount){\r\n        toast.error('Quantidade solicitada fora de estoque');\r\n        return;\r\n      }\r\n\r\n      const updatedCart = [...cart];\r\n      const productExists = updatedCart.find(product => product.id === productId);\r\n\r\n      if(productExists){\r\n        productExists.amount = amount;\r\n        setCart(updatedCart);\r\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\r\n      }else{\r\n        throw Error();\r\n      }\r\n\r\n    } catch {\r\n      toast.error('Erro na alteração de quantidade do produto');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart(): CartContextData {\r\n  const context = useContext(CartContext);\r\n\r\n  return context;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { MdAddShoppingCart } from 'react-icons/md'\r\n\r\nimport { ProductList } from './styles'\r\nimport { api } from '../../services/api'\r\nimport { formatPrice } from '../../util/format'\r\nimport { useCart } from '../../hooks/useCart'\r\n\r\ninterface Product {\r\n  id: number\r\n  title: string\r\n  price: number\r\n  image: string\r\n}\r\n\r\ninterface ProductFormatted extends Product {\r\n  priceFormatted: string\r\n}\r\n\r\ninterface CartItemsAmount {\r\n  [key: number]: number\r\n}\r\n\r\nconst Home = (): JSX.Element => {\r\n  const [products, setProducts] = useState<ProductFormatted[]>([])\r\n  const { addProduct, cart } = useCart()\r\n\r\n  const cartItemsAmount = cart.reduce((sumAmount, product) => {\r\n    const newSumAmount = { ...sumAmount }\r\n    newSumAmount[product.id] = product.amount\r\n\r\n    return newSumAmount\r\n  }, {} as CartItemsAmount)\r\n\r\n  useEffect(() => {\r\n    async function loadProducts() {\r\n      const response = await api.get<Product[]>('products')\r\n\r\n      const data = response.data.map(product => ({\r\n        ...product,\r\n        priceFormatted: formatPrice(product.price),\r\n      }))\r\n\r\n      setProducts(data)\r\n    }\r\n\r\n    loadProducts()\r\n  }, [])\r\n\r\n  function handleAddProduct(id: number) {\r\n    addProduct(id)\r\n  }\r\n\r\n  return (\r\n    <ProductList>\r\n      {products.map(product => (\r\n        <li key={product.id}>\r\n          <img\r\n            src={product.image}\r\n            alt={product.title}\r\n          />\r\n          <strong>{product.title}</strong>\r\n          <span>{product.priceFormatted}</span>\r\n          <button\r\n            type=\"button\"\r\n            data-testid=\"add-product-button\"\r\n            onClick={() => handleAddProduct(product.id)}\r\n          >\r\n            <div data-testid=\"cart-product-quantity\">\r\n              <MdAddShoppingCart size={16} color=\"#FFF\" />\r\n              {cartItemsAmount[product.id] || 0}\r\n            </div>\r\n\r\n            <span>ADICIONAR AO CARRINHO</span>\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ProductList>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components';\r\nimport { darken, lighten } from 'polished';\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n\r\n  footer {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      padding: 12px 20px;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.06, '#7159c1')};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductTable = styled.table`\r\n  width: 100%;\r\n\r\n  thead th {\r\n    color: #999;\r\n    text-align: left;\r\n    padding: 12px;\r\n  }\r\n\r\n  tbody td {\r\n    padding: 12px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n\r\n  img {\r\n    height: 100px;\r\n  }\r\n\r\n  strong {\r\n    color: #333;\r\n    display: block;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    margin-top: 5px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      color: #666;\r\n      padding: 6px;\r\n      width: 50px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    border: 0;\r\n    padding: 6px;\r\n\r\n    svg {\r\n      color: #7159c1;\r\n      transition: color 0.2s;\r\n    }\r\n\r\n    &:hover {\r\n      svg {\r\n        color: ${darken(0.06, '#7159c1')};\r\n      }\r\n    }\r\n\r\n    &:disabled {\r\n      svg {\r\n        color: ${lighten(0.25, '#7159c1')};\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Total = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n\r\n  span {\r\n    color: #999;\r\n    font-weight: bold;\r\n  }\r\n\r\n  strong {\r\n    font-size: 28px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport {\r\n  MdDelete,\r\n  MdAddCircleOutline,\r\n  MdRemoveCircleOutline,\r\n} from 'react-icons/md'\r\n\r\nimport { useCart } from '../../hooks/useCart'\r\nimport { formatPrice } from '../../util/format'\r\nimport { Container, ProductTable, Total } from './styles'\r\n\r\ninterface Product {\r\n  id: number\r\n  title: string\r\n  price: number\r\n  image: string\r\n  amount: number\r\n}\r\n\r\nconst Cart = (): JSX.Element => {\r\n  const { cart, removeProduct, updateProductAmount } = useCart()\r\n\r\n  const cartFormatted = cart.map((product) => ({\r\n    ...product,\r\n    priceFormatted: formatPrice(product.price),\r\n    subTotal: formatPrice(product.price * product.amount)\r\n  }))\r\n  const total = formatPrice(\r\n    cart.reduce((sumTotal, product) => {\r\n      return sumTotal + product.price*product.amount\r\n    }, 0),\r\n  )\r\n\r\n  function handleProductIncrement(product: Product) {\r\n    updateProductAmount({productId: product.id, amount: product.amount+1});\r\n  }\r\n\r\n  function handleProductDecrement(product: Product) {\r\n    updateProductAmount({productId: product.id, amount: product.amount-1});\r\n  }\r\n\r\n  function handleRemoveProduct(productId: number) {\r\n    removeProduct(productId);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ProductTable>\r\n        <thead>\r\n          <tr>\r\n            <th aria-label=\"product image\" />\r\n            <th>PRODUTO</th>\r\n            <th>QTD</th>\r\n            <th>SUBTOTAL</th>\r\n            <th aria-label=\"delete icon\" />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartFormatted.map(product => (\r\n            <tr key={product.id} data-testid=\"product\">\r\n            <td>\r\n              <img\r\n                src={product.image}\r\n                alt={product.title}\r\n              />\r\n            </td>\r\n            <td>\r\n              <strong>{product.title}</strong>\r\n              <span>{product.priceFormatted}</span>\r\n            </td>\r\n            <td>\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  data-testid=\"decrement-product\"\r\n                  disabled={product.amount <= 1}\r\n                  onClick={() => handleProductDecrement(product)}\r\n                >\r\n                  <MdRemoveCircleOutline size={20} />\r\n                </button>\r\n                <input\r\n                  type=\"text\"\r\n                  data-testid=\"product-amount\"\r\n                  readOnly\r\n                  value={product.amount}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  data-testid=\"increment-product\"\r\n                  onClick={() => handleProductIncrement(product)}\r\n                >\r\n                  <MdAddCircleOutline size={20} />\r\n                </button>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <strong>{product.subTotal}</strong>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                data-testid=\"remove-product\"\r\n                onClick={() => handleRemoveProduct(product.id)}\r\n              >\r\n                <MdDelete size={20} />\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          ))}\r\n        </tbody>\r\n      </ProductTable>\r\n\r\n      <footer>\r\n        <button type=\"button\">Finalizar pedido</button>\r\n\r\n        <Total>\r\n          <span>TOTAL</span>\r\n          <strong>{total}</strong>\r\n        </Total>\r\n      </footer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Cart from './pages/Cart';\r\n\r\nconst Routes = (): JSX.Element => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/cart\" component={Cart} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/background.72f221ea.svg\";","import { createGlobalStyle } from 'styled-components';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport background from '../assets/images/background.svg';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: #191920 url(${background}) no-repeat center top;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button {\r\n    font: 14px Roboto, sans-serif;\r\n  }\r\n\r\n  #root {\r\n    max-width: 1020px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 50px;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.a865163d.svg\";","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 50px 0;\r\n\r\n  a {\r\n    transition: opacity 0.2s;\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Cart = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n\r\n  div {\r\n    text-align: right;\r\n    margin-right: 10px;\r\n\r\n    strong {\r\n      display: block;\r\n      color: #fff;\r\n    }\r\n\r\n    span {\r\n      font-size: 12px;\r\n      color: #999;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdShoppingBasket } from 'react-icons/md';\r\n\r\nimport logo from '../../assets/images/logo.svg';\r\nimport { Container, Cart } from './styles';\r\nimport { useCart } from '../../hooks/useCart';\r\n\r\nconst Header = (): JSX.Element => {\r\n  const { cart } = useCart();\r\n  const cartSize = cart.length;\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"Rocketshoes\" />\r\n      </Link>\r\n\r\n      <Cart to=\"/cart\">\r\n        <div>\r\n          <strong>Meu carrinho</strong>\r\n          <span data-testid=\"cart-size\">\r\n            {cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}\r\n          </span>\r\n        </div>\r\n        <MdShoppingBasket size={36} color=\"#FFF\" />\r\n      </Cart>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport Routes from './routes';\r\nimport GlobalStyles from './styles/global';\r\nimport Header from './components/Header';\r\nimport { CartProvider } from './hooks/useCart';\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <BrowserRouter>\r\n      <CartProvider>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <Routes />\r\n        <ToastContainer autoClose={3000} />\r\n      </CartProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}